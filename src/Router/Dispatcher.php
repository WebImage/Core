<?php

namespace WebImage\Router;

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use WebImage\Http\Response;
use FastRoute\Dispatcher As BaseDispatcher;

class Dispatcher extends \League\Route\Dispatcher
{
//	protected function handleNotFound()
//	{
//		echo '<pre>';print_r(get_class_methods($this));echo '<hr>' . __FILE__ . ':' . __LINE__;exit;
//		return parent::handleNotFound(); // TODO: Change the autogenerated stub
//	}
	public function dispatch($httpMethod, $uri)
	{
		$dispatch = parent::dispatch($httpMethod, $uri);

		/**
		 * If not other route is found, check if a wildcard "catchall" route exists
		 */
		if ($dispatch[0] == BaseDispatcher::NOT_FOUND) {
			if (isset($this->staticRouteMap['*']) && isset($this->staticRouteMap['*']['/*'])) {
				$handler = $this->staticRouteMap['*']['/*'];

				return [self::FOUND, $handler, []];
			}
		}
		return $dispatch;
	}
}